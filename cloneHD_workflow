#!/bin/bash

# set an initial value for the flag
prefix=false
input_vcf=false
input_cna=false
output_dir=false
sample_name=false
show_help=false
debug=false

if [ $# -eq 0 ];
then
    show_help=true
fi

# read the options
TEMP=`getopt -o p:v:c:o:s:hd --long pre:,vcf:,cna:,output:,sample:,help,debug -n 'pcawg_workflow' -- "$@"`
eval set -- "$TEMP"

# extract options and their arguments into variables.
while true ; do
    case "$1" in
        -p|--pre) prefix=$2 ; shift 2 ;;
        -v|--vcf) input_vcf=$2 ; shift 2 ;;
        -c|--cna) input_cna=$2 ; shift 2 ;;
        -o|--output) output_dir=$2 ; shift 2 ;;
        -s|--sample) sample_name=$2 ; shift 2 ;;
        -h|--help) show_help=true ; shift ;;
        -d|--debug) debug=true ; shift ;;
        --) shift ; break ;;
        *) echo $2 "Internal error!" ; exit 1 ;;
    esac
done

if [[    $prefix == false
      || $input_vcf == false
      || $input_cna == false
      || $output_dir == false
      || $sample_name == false
    ]];
then
    show_help=true
fi

if [ $show_help == true ];
then
    echo "usage: $0 [options]"
    echo "options:"
    echo "    -p, --pre arg       the prefix"
    echo "    -v, --vcf arg       the VCF file describing the SNVs"
    echo "    -c, --cna arg       the Battenberg-format segmentation file describing the CNAs"
    echo "    -o, --output arg    write our output into this directory named dir/sample.cloneHD.gz"
    echo "    -s, --sample arg    the sample name"
    echo "    -d, --debug         turns on debugging"
    echo "    -h, --help          this text"
    echo "    add --debug for debugging output"
    echo "Runs the cloneHD workflow and saves the results to the output directory."
    exit
fi

### SNV parser ###
python cloneHD-tools/clonehd/snv_parser.py \
  --variant-type 'mutect-smchet' \
  --output-snvs ${output_snvs}
${input_vcf}